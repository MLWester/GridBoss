name: CI

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

permissions:
  contents: read

jobs:
  gitleaks:
    name: Secret Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run gitleaks
        uses: gitleaks/gitleaks-action@v2
        with:
          args: detect --source=. --no-banner --redact

  backend:
    name: Backend Lint & Tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: api
    env:
      PYTHONPATH: ${{ github.workspace }}:${{ github.workspace }}/api
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: pip
          cache-dependency-path: api/requirements-dev.txt

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt

      - name: Ruff lint
        run: ruff check .

      - name: Black format check
        run: black --check .

      - name: Run pytest with coverage
        run: pytest

      - name: Generate API docs
        run: python scripts/generate_api_docs.py
        working-directory: ${{ github.workspace }}

      - name: Verify API docs are current
        run: git diff --exit-code docs/API.md
        working-directory: ${{ github.workspace }}

      - name: Upload coverage artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: backend-coverage
          path: coverage.xml
          retention-days: 7

  frontend:
    name: Frontend Lint, Test, Build
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: npm
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: ESLint
        run: npm run lint

      - name: Prettier check
        run: npm run format

      - name: Run unit tests with coverage
        run: npm run test:coverage

      - name: Build
        run: npm run build

      - name: Upload frontend coverage
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: frontend-coverage
          path: coverage
          retention-days: 7
